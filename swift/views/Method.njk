{% macro endpoint(method) -%}
    {% if method.method == 'list' -%}
        self.endpoint(withId: false)
    {%- else -%}
        self.endpoint()
    {%- endif %}
{%- endmacro %}


// {{ method.description }}
{% if method.responseName == '' %}
    open func {{ method.method }}(callback: @escaping (_ error: HTTPError?) -> Void) {
        rc.{{ method.method | http_method }}String({{ endpoint(method) }}) { string, error in
          callback(error)
        }
    }
    {% if method.parametersName != '' %}
        // {{ method.description }}
        open func {{ method.method }}(parameters: Parameters, callback: @escaping (_ error: HTTPError?) -> Void) {
            rc.{{ method.method | http_method }}String({{ endpoint(method) }}, parameters: parameters) { string, error in
              callback(error)
            }
        }
        // {{ method.description }}
        open func {{ method.method }}(parameters: {{ method.parametersName }}, callback: @escaping (_ error: HTTPError?) -> Void) {
            {{ method.method }}(parameters: parameters.toParameters(), callback: callback)
        }
    {% endif %}
{% else %}
    open func {{ method.method }}(callback: @escaping (_ t: {{ method.responseName }}?, _ error: HTTPError?) -> Void) {
      rc.{{ method.method | http_method }}({{ endpoint(method) }}) { (t: {{ method.responseName }}?, error) in
          callback(t, error)
      }
    }
    {% if method.parametersName != '' %}
        // {{ method.description }}
        open func {{ method.method }}(parameters: Parameters, callback: @escaping (_ t: {{ method.responseName }}?, _ error: HTTPError?) -> Void) {
          rc.{{ method.method | http_method }}({{ endpoint(method) }}, parameters: parameters) { (t: {{ method.responseName }}?, error) in
              callback(t, error)
          }
        }
        // {{ method.description }}
        open func {{ method.method }}(parameters: {{ method.parametersName }}, callback: @escaping (_ t: {{ method.responseName }}?, _ error: HTTPError?) -> Void) {
            {{ method.method }}(parameters: parameters.toParameters(), callback: callback)
        }
    {% endif %}
{% endif %}
